---
- name: Demo Lightspeed extension 
  hosts: localhost
  vars:
    firewall_pkg: firewalld
    web_pkg: httpd
    ssl_pkg: mod_ssl
    secret_src: /home/abeisemb/Pictures/thinking.png
    secret_dest: /home/abeisemb/Pictures/thonking.png
  tasks:    
    - name: Task block
      block:
        - name: Install web_pkg on our local system
          ansible.builtin.package:
            name: "{{ web_pkg }}"
            state: present
          delegate_to: localhost
      when: true
    
    - name: Set up ssl_pkg.
      ansible.builtin.set_fact:
        ssl_cmd: sudo -u apache apache2ctl configtest
      when: ssl_cmd is not defined
    
    - name: Repeat the above task.
      ansible.builtin.debug:
        msg: "{{ ssl_cmd }}"

    - name: Print all relevant facts.
      ansible.builtin.debug:
        var: ansible_facts
    
    - name: File my taxes.
      ansible.builtin.stat:
        path: /tmp/ansible_facts.txt
      register: stat_result
    
    - name: Create a task that notifies the spaghetti handler.
      ansible.builtin.copy:
        dest: /tmp/ansible_facts.txt
        content: " hi from inside the new file\n"
      when: not stat_result.stat.exists
    
    - name: Copy secret_src to secret_dest with mode 0777.
      ansible.builtin.copy:
        src: "{{ secret_src }}"
        dest: "{{ secret_dest }}"
        mode: '0777'

    - name: Configure SELinux to permissive mode.
      ansible.posix.selinux:
        policy: targeted
        state: permissive
      when: ansible_facts['os_family'] == "RedHat"
    
    - name: Set the tuned-adm profile to desktop.
      community.general.alternatives:
        name: tuned-adm
        path: /usr/sbin/tuned-adm
      when: ansible_facts['os_family'] == "RedHat"

    - name: Configure SLinux to enforcing.
      ansible.posix.selinux:
        policy: targeted
        state: enforcing
      when: ansible_facts['os_family'] == "RedHat"

      # Install postgresql-server & run postgresql-setup command.
    - name: Install postgresql-server
      ansible.builtin.package:
        name: "{{ _name_ }}"
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Run postgresql-setup command.
      ansible.builtin.command: postgresql-setup initdb
      ignore_errors: true

    - name: Pull from a theoretical git repo. 
      git: 
        repo: "https://github.com/abeisemb/lightspeed-code-bot-test-abeisemb"
        version: HEAD

